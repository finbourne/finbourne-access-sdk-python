{
  "openapi": "3.0.1",
  "info": {
    "title": "FINBOURNE Access Management API",
    "description": "FINBOURNE Technology",
    "termsOfService": "https://www.finbourne.com/legal/terms-conditions",
    "contact": {
      "name": "FINBOURNE Technology",
      "url": "https://www.finbourne.com",
      "email": "info@finbourne.com"
    },
    "version": "0.0.3906",
    "x-logo": {
      "url": "https://www.lusid.com/app/assets/logo_white.png",
      "backgroundColor": "#415464"
    }
  },
  "servers": [
    {
      "url": "https://fbn-ci.lusid.com/access"
    }
  ],
  "paths": {
    "/api/me": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "GetOwnPolicies: Get policies of requesting user",
        "description": "Gets all Policies for the current user",
        "operationId": "GetOwnPolicies",
        "parameters": [
          {
            "name": "applications",
            "in": "query",
            "description": "Optional. Filter on the applications that the policies apply to",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Optional. When paginating, skip this number of results",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get policies and licences of current user",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedPolicyDefinitionResponse"
                  }
                },
                "example": [
                  {
                    "sourceRole": {
                      "scope": "default",
                      "code": "example-source-role"
                    },
                    "roleHierarchyIndex": 50,
                    "description": "Example policy demonstrating the granting of access to some resources",
                    "applications": [
                      "LUSID"
                    ],
                    "policyType": "Entitlement",
                    "id": {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    "grant": "Allow",
                    "selectors": [
                      {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    ],
                    "for": [
                      {
                        "effectiveRange": {
                          "from": "2015-12-25T00:00:00.0000000+00:00",
                          "to": "2020-12-25T00:00:00.0000000+00:00"
                        }
                      },
                      {
                        "asAtRangeForSpec": {
                          "from": {
                            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                          },
                          "to": {
                            "value": "AsAt=Latest"
                          }
                        }
                      }
                    ],
                    "if": [
                      {
                        "ifRequestHeaderExpression": {
                          "headerName": "organisation.specific.group.header",
                          "operator": "EqualsCaseInsensitive",
                          "value": "special-group"
                        }
                      }
                    ],
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    }
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedPolicyDefinitionResponse"
                  }
                },
                "example": [
                  {
                    "sourceRole": {
                      "scope": "default",
                      "code": "example-source-role"
                    },
                    "roleHierarchyIndex": 50,
                    "description": "Example policy demonstrating the granting of access to some resources",
                    "applications": [
                      "LUSID"
                    ],
                    "policyType": "Entitlement",
                    "id": {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    "grant": "Allow",
                    "selectors": [
                      {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    ],
                    "for": [
                      {
                        "effectiveRange": {
                          "from": "2015-12-25T00:00:00.0000000+00:00",
                          "to": "2020-12-25T00:00:00.0000000+00:00"
                        }
                      },
                      {
                        "asAtRangeForSpec": {
                          "from": {
                            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                          },
                          "to": {
                            "value": "AsAt=Latest"
                          }
                        }
                      }
                    ],
                    "if": [
                      {
                        "ifRequestHeaderExpression": {
                          "headerName": "organisation.specific.group.header",
                          "operator": "EqualsCaseInsensitive",
                          "value": "special-group"
                        }
                      }
                    ],
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    }
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedPolicyDefinitionResponse"
                  }
                },
                "example": [
                  {
                    "sourceRole": {
                      "scope": "default",
                      "code": "example-source-role"
                    },
                    "roleHierarchyIndex": 50,
                    "description": "Example policy demonstrating the granting of access to some resources",
                    "applications": [
                      "LUSID"
                    ],
                    "policyType": "Entitlement",
                    "id": {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    "grant": "Allow",
                    "selectors": [
                      {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    ],
                    "for": [
                      {
                        "effectiveRange": {
                          "from": "2015-12-25T00:00:00.0000000+00:00",
                          "to": "2020-12-25T00:00:00.0000000+00:00"
                        }
                      },
                      {
                        "asAtRangeForSpec": {
                          "from": {
                            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                          },
                          "to": {
                            "value": "AsAt=Latest"
                          }
                        }
                      }
                    ],
                    "if": [
                      {
                        "ifRequestHeaderExpression": {
                          "headerName": "organisation.specific.group.header",
                          "operator": "EqualsCaseInsensitive",
                          "value": "special-group"
                        }
                      }
                    ],
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Evaluate: Run one or more evaluations",
        "description": "Given a dictionary of evaluation requests (keyed by any arbitrary correlation identifier), each will be evaluated according to the current user's policies (deduced from the provided OAuth token).",
        "operationId": "Evaluate",
        "parameters": [
          {
            "name": "applications",
            "in": "query",
            "description": "Optional. The application type of the roles and policies to use when evaluating.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The requested AsAt date of the entitlements",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          }
        ],
        "requestBody": {
          "description": "A dictionary of evaluations, keyed using any arbitrary correlation id (it will be returned with the response for that evaluation).",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EvaluationRequest"
                }
              },
              "example": {
                "data-access-page-evaluation": {
                  "request": {
                    "action": {
                      "entityCode": "WebSitePage",
                      "scope": "FINBOURNE",
                      "activity": "SeeAdminControls"
                    },
                    "toEffectiveDate": "2018-12-08T13:30:00.0000000+00:00",
                    "toAsAt": "2018-12-31T11:00:00.0000000+00:00"
                  },
                  "resource": {
                    "id": {
                      "scope": "FINBOURNE",
                      "code": "DataAccessPage"
                    },
                    "metadata": {
                      "RequiredLicence": [
                        {
                          "provider": "WebsiteAccess",
                          "value": "FINBOURNE"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EvaluationRequest"
                }
              },
              "example": {
                "data-access-page-evaluation": {
                  "request": {
                    "action": {
                      "entityCode": "WebSitePage",
                      "scope": "FINBOURNE",
                      "activity": "SeeAdminControls"
                    },
                    "toEffectiveDate": "2018-12-08T13:30:00.0000000+00:00",
                    "toAsAt": "2018-12-31T11:00:00.0000000+00:00"
                  },
                  "resource": {
                    "id": {
                      "scope": "FINBOURNE",
                      "code": "DataAccessPage"
                    },
                    "metadata": {
                      "RequiredLicence": [
                        {
                          "provider": "WebsiteAccess",
                          "value": "FINBOURNE"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EvaluationRequest"
                }
              },
              "example": {
                "data-access-page-evaluation": {
                  "request": {
                    "action": {
                      "entityCode": "WebSitePage",
                      "scope": "FINBOURNE",
                      "activity": "SeeAdminControls"
                    },
                    "toEffectiveDate": "2018-12-08T13:30:00.0000000+00:00",
                    "toAsAt": "2018-12-31T11:00:00.0000000+00:00"
                  },
                  "resource": {
                    "id": {
                      "scope": "FINBOURNE",
                      "code": "DataAccessPage"
                    },
                    "metadata": {
                      "RequiredLicence": [
                        {
                          "provider": "WebsiteAccess",
                          "value": "FINBOURNE"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EvaluationRequest"
                }
              },
              "example": {
                "data-access-page-evaluation": {
                  "request": {
                    "action": {
                      "entityCode": "WebSitePage",
                      "scope": "FINBOURNE",
                      "activity": "SeeAdminControls"
                    },
                    "toEffectiveDate": "2018-12-08T13:30:00.0000000+00:00",
                    "toAsAt": "2018-12-31T11:00:00.0000000+00:00"
                  },
                  "resource": {
                    "id": {
                      "scope": "FINBOURNE",
                      "code": "DataAccessPage"
                    },
                    "metadata": {
                      "RequiredLicence": [
                        {
                          "provider": "WebsiteAccess",
                          "value": "FINBOURNE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Run an evaluation against the current user's entitlements",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/EvaluationResponse"
                  }
                },
                "example": {
                  "data-acces-page-evaluation": {
                    "result": "DeniedAsLicenceRequired",
                    "detailedMessage": "Access was denied because user is missing licence 'A/B'"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/EvaluationResponse"
                  }
                },
                "example": {
                  "data-acces-page-evaluation": {
                    "result": "DeniedAsLicenceRequired",
                    "detailedMessage": "Access was denied because user is missing licence 'A/B'"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/EvaluationResponse"
                  }
                },
                "example": {
                  "data-acces-page-evaluation": {
                    "result": "DeniedAsLicenceRequired",
                    "detailedMessage": "Access was denied because user is missing licence 'A/B'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/metadata/access/resources": {
      "get": {
        "tags": [
          "Application Metadata"
        ],
        "summary": "ListAccessControlledResources: Get resources available for access control",
        "description": "Get the comprehensive set of resources that are available for access control",
        "operationId": "ListAccessControlledResources",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "ListPolicies: List Policies",
        "description": "Gets all Policies in a scope. For pagination support, use PagePolicies.",
        "operationId": "ListPolicies",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The requested scope",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Optional. When paginating, skip this number of results",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Policies",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    "description": "Example policy demonstrating the granting of access to some resources",
                    "applications": [
                      "LUSID"
                    ],
                    "grant": "Allow",
                    "selectors": [
                      {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    ],
                    "for": [
                      {
                        "effectiveRange": {
                          "from": "2015-12-25T00:00:00.0000000+00:00",
                          "to": "2020-12-25T00:00:00.0000000+00:00"
                        }
                      },
                      {
                        "asAtRangeForSpec": {
                          "from": {
                            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                          },
                          "to": {
                            "value": "AsAt=Latest"
                          }
                        }
                      }
                    ],
                    "if": [
                      {
                        "ifRequestHeaderExpression": {
                          "headerName": "organisation.specific.group.header",
                          "operator": "EqualsCaseInsensitive",
                          "value": "special-group"
                        }
                      }
                    ],
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    }
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    "description": "Example policy demonstrating the granting of access to some resources",
                    "applications": [
                      "LUSID"
                    ],
                    "grant": "Allow",
                    "selectors": [
                      {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    ],
                    "for": [
                      {
                        "effectiveRange": {
                          "from": "2015-12-25T00:00:00.0000000+00:00",
                          "to": "2020-12-25T00:00:00.0000000+00:00"
                        }
                      },
                      {
                        "asAtRangeForSpec": {
                          "from": {
                            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                          },
                          "to": {
                            "value": "AsAt=Latest"
                          }
                        }
                      }
                    ],
                    "if": [
                      {
                        "ifRequestHeaderExpression": {
                          "headerName": "organisation.specific.group.header",
                          "operator": "EqualsCaseInsensitive",
                          "value": "special-group"
                        }
                      }
                    ],
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    }
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    "description": "Example policy demonstrating the granting of access to some resources",
                    "applications": [
                      "LUSID"
                    ],
                    "grant": "Allow",
                    "selectors": [
                      {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    ],
                    "for": [
                      {
                        "effectiveRange": {
                          "from": "2015-12-25T00:00:00.0000000+00:00",
                          "to": "2020-12-25T00:00:00.0000000+00:00"
                        }
                      },
                      {
                        "asAtRangeForSpec": {
                          "from": {
                            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                          },
                          "to": {
                            "value": "AsAt=Latest"
                          }
                        }
                      }
                    ],
                    "if": [
                      {
                        "ifRequestHeaderExpression": {
                          "headerName": "organisation.specific.group.header",
                          "operator": "EqualsCaseInsensitive",
                          "value": "special-group"
                        }
                      }
                    ],
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "CreatePolicy: Create Policy",
        "description": "Creates a Policy",
        "operationId": "CreatePolicy",
        "requestBody": {
          "description": "The definition of the Policy",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreationRequest"
              },
              "example": {
                "code": "example-policy",
                "description": "Example policy demonstrating their creation",
                "applications": [
                  "LUSID"
                ],
                "grant": "Allow",
                "selectors": [
                  {
                    "idSelectorDefinition": {
                      "identifier": {
                        "scope": "official"
                      },
                      "actions": [
                        {
                          "scope": "default",
                          "activity": "Read",
                          "entity": "Portfolio"
                        },
                        {
                          "scope": "default",
                          "activity": "Aggregate",
                          "entity": "Portfolio"
                        }
                      ],
                      "name": "access-official-scope",
                      "description": "Allow readonly access to the 'official' scope"
                    }
                  }
                ],
                "for": [
                  {
                    "effectiveRange": {
                      "from": "2015-12-25T00:00:00.0000000+00:00",
                      "to": "2020-12-25T00:00:00.0000000+00:00"
                    }
                  },
                  {
                    "asAtRangeForSpec": {
                      "from": {
                        "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                      },
                      "to": {
                        "value": "AsAt=Latest"
                      }
                    }
                  }
                ],
                "if": [
                  {
                    "ifRequestHeaderExpression": {
                      "headerName": "organisation.specific.group.header",
                      "operator": "EqualsCaseInsensitive",
                      "value": "special-group"
                    }
                  }
                ],
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreationRequest"
              },
              "example": {
                "code": "example-policy",
                "description": "Example policy demonstrating their creation",
                "applications": [
                  "LUSID"
                ],
                "grant": "Allow",
                "selectors": [
                  {
                    "idSelectorDefinition": {
                      "identifier": {
                        "scope": "official"
                      },
                      "actions": [
                        {
                          "scope": "default",
                          "activity": "Read",
                          "entity": "Portfolio"
                        },
                        {
                          "scope": "default",
                          "activity": "Aggregate",
                          "entity": "Portfolio"
                        }
                      ],
                      "name": "access-official-scope",
                      "description": "Allow readonly access to the 'official' scope"
                    }
                  }
                ],
                "for": [
                  {
                    "effectiveRange": {
                      "from": "2015-12-25T00:00:00.0000000+00:00",
                      "to": "2020-12-25T00:00:00.0000000+00:00"
                    }
                  },
                  {
                    "asAtRangeForSpec": {
                      "from": {
                        "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                      },
                      "to": {
                        "value": "AsAt=Latest"
                      }
                    }
                  }
                ],
                "if": [
                  {
                    "ifRequestHeaderExpression": {
                      "headerName": "organisation.specific.group.header",
                      "operator": "EqualsCaseInsensitive",
                      "value": "special-group"
                    }
                  }
                ],
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreationRequest"
              },
              "example": {
                "code": "example-policy",
                "description": "Example policy demonstrating their creation",
                "applications": [
                  "LUSID"
                ],
                "grant": "Allow",
                "selectors": [
                  {
                    "idSelectorDefinition": {
                      "identifier": {
                        "scope": "official"
                      },
                      "actions": [
                        {
                          "scope": "default",
                          "activity": "Read",
                          "entity": "Portfolio"
                        },
                        {
                          "scope": "default",
                          "activity": "Aggregate",
                          "entity": "Portfolio"
                        }
                      ],
                      "name": "access-official-scope",
                      "description": "Allow readonly access to the 'official' scope"
                    }
                  }
                ],
                "for": [
                  {
                    "effectiveRange": {
                      "from": "2015-12-25T00:00:00.0000000+00:00",
                      "to": "2020-12-25T00:00:00.0000000+00:00"
                    }
                  },
                  {
                    "asAtRangeForSpec": {
                      "from": {
                        "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                      },
                      "to": {
                        "value": "AsAt=Latest"
                      }
                    }
                  }
                ],
                "if": [
                  {
                    "ifRequestHeaderExpression": {
                      "headerName": "organisation.specific.group.header",
                      "operator": "EqualsCaseInsensitive",
                      "value": "special-group"
                    }
                  }
                ],
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreationRequest"
              },
              "example": {
                "code": "example-policy",
                "description": "Example policy demonstrating their creation",
                "applications": [
                  "LUSID"
                ],
                "grant": "Allow",
                "selectors": [
                  {
                    "idSelectorDefinition": {
                      "identifier": {
                        "scope": "official"
                      },
                      "actions": [
                        {
                          "scope": "default",
                          "activity": "Read",
                          "entity": "Portfolio"
                        },
                        {
                          "scope": "default",
                          "activity": "Aggregate",
                          "entity": "Portfolio"
                        }
                      ],
                      "name": "access-official-scope",
                      "description": "Allow readonly access to the 'official' scope"
                    }
                  }
                ],
                "for": [
                  {
                    "effectiveRange": {
                      "from": "2015-12-25T00:00:00.0000000+00:00",
                      "to": "2020-12-25T00:00:00.0000000+00:00"
                    }
                  },
                  {
                    "asAtRangeForSpec": {
                      "from": {
                        "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                      },
                      "to": {
                        "value": "AsAt=Latest"
                      }
                    }
                  }
                ],
                "if": [
                  {
                    "ifRequestHeaderExpression": {
                      "headerName": "organisation.specific.group.header",
                      "operator": "EqualsCaseInsensitive",
                      "value": "special-group"
                    }
                  }
                ],
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created policy",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "FINBOURNE",
                    "code": "dataset-licence-1"
                  },
                  "description": "Access to licensed dataset",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "FINBOURNE",
                          "code": "dataset-licence-1"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-dataset-1",
                        "description": "Licence for dataset 1"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "FINBOURNE",
                    "code": "dataset-licence-1"
                  },
                  "description": "Access to licensed dataset",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "FINBOURNE",
                          "code": "dataset-licence-1"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-dataset-1",
                        "description": "Licence for dataset 1"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "FINBOURNE",
                    "code": "dataset-licence-1"
                  },
                  "description": "Access to licensed dataset",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "FINBOURNE",
                          "code": "dataset-licence-1"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-dataset-1",
                        "description": "Licence for dataset 1"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policies/page": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "PagePolicies: Page Policies",
        "description": "Gets all Policies with pagination support.",
        "operationId": "PagePolicies",
        "parameters": [
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. Not currently used. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "maxLength": 16384,
              "minLength": 1,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. 2000 if not provided. When paginating, limit the number of returned results to this many",
            "schema": {
              "maximum": 5000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Optional. Paging token returned from a previous result",
            "schema": {
              "maxLength": 500,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\+/]*={0,3}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested list of Policies",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyResponse"
                },
                "example": {
                  "values": [
                    {
                      "id": {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      "description": "Example policy demonstrating the granting of access to some resources",
                      "applications": [
                        "LUSID"
                      ],
                      "grant": "Allow",
                      "selectors": [
                        {
                          "idSelectorDefinition": {
                            "identifier": {
                              "scope": "official"
                            },
                            "actions": [
                              {
                                "scope": "default",
                                "activity": "Read",
                                "entity": "Portfolio"
                              },
                              {
                                "scope": "default",
                                "activity": "Aggregate",
                                "entity": "Portfolio"
                              }
                            ],
                            "name": "access-official-scope",
                            "description": "Allow readonly access to the 'official' scope"
                          }
                        }
                      ],
                      "for": [
                        {
                          "effectiveRange": {
                            "from": "2015-12-25T00:00:00.0000000+00:00",
                            "to": "2020-12-25T00:00:00.0000000+00:00"
                          }
                        },
                        {
                          "asAtRangeForSpec": {
                            "from": {
                              "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                            },
                            "to": {
                              "value": "AsAt=Latest"
                            }
                          }
                        }
                      ],
                      "if": [
                        {
                          "ifRequestHeaderExpression": {
                            "headerName": "organisation.specific.group.header",
                            "operator": "EqualsCaseInsensitive",
                            "value": "special-group"
                          }
                        }
                      ],
                      "when": {
                        "activate": "2016-08-31T18:00:00.0000000+00:00",
                        "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                      }
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policies/page?filter=&sortBy=&limit=&page=",
                  "links": []
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyResponse"
                },
                "example": {
                  "values": [
                    {
                      "id": {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      "description": "Example policy demonstrating the granting of access to some resources",
                      "applications": [
                        "LUSID"
                      ],
                      "grant": "Allow",
                      "selectors": [
                        {
                          "idSelectorDefinition": {
                            "identifier": {
                              "scope": "official"
                            },
                            "actions": [
                              {
                                "scope": "default",
                                "activity": "Read",
                                "entity": "Portfolio"
                              },
                              {
                                "scope": "default",
                                "activity": "Aggregate",
                                "entity": "Portfolio"
                              }
                            ],
                            "name": "access-official-scope",
                            "description": "Allow readonly access to the 'official' scope"
                          }
                        }
                      ],
                      "for": [
                        {
                          "effectiveRange": {
                            "from": "2015-12-25T00:00:00.0000000+00:00",
                            "to": "2020-12-25T00:00:00.0000000+00:00"
                          }
                        },
                        {
                          "asAtRangeForSpec": {
                            "from": {
                              "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                            },
                            "to": {
                              "value": "AsAt=Latest"
                            }
                          }
                        }
                      ],
                      "if": [
                        {
                          "ifRequestHeaderExpression": {
                            "headerName": "organisation.specific.group.header",
                            "operator": "EqualsCaseInsensitive",
                            "value": "special-group"
                          }
                        }
                      ],
                      "when": {
                        "activate": "2016-08-31T18:00:00.0000000+00:00",
                        "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                      }
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policies/page?filter=&sortBy=&limit=&page=",
                  "links": []
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyResponse"
                },
                "example": {
                  "values": [
                    {
                      "id": {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      "description": "Example policy demonstrating the granting of access to some resources",
                      "applications": [
                        "LUSID"
                      ],
                      "grant": "Allow",
                      "selectors": [
                        {
                          "idSelectorDefinition": {
                            "identifier": {
                              "scope": "official"
                            },
                            "actions": [
                              {
                                "scope": "default",
                                "activity": "Read",
                                "entity": "Portfolio"
                              },
                              {
                                "scope": "default",
                                "activity": "Aggregate",
                                "entity": "Portfolio"
                              }
                            ],
                            "name": "access-official-scope",
                            "description": "Allow readonly access to the 'official' scope"
                          }
                        }
                      ],
                      "for": [
                        {
                          "effectiveRange": {
                            "from": "2015-12-25T00:00:00.0000000+00:00",
                            "to": "2020-12-25T00:00:00.0000000+00:00"
                          }
                        },
                        {
                          "asAtRangeForSpec": {
                            "from": {
                              "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                            },
                            "to": {
                              "value": "AsAt=Latest"
                            }
                          }
                        }
                      ],
                      "if": [
                        {
                          "ifRequestHeaderExpression": {
                            "headerName": "organisation.specific.group.header",
                            "operator": "EqualsCaseInsensitive",
                            "value": "special-group"
                          }
                        }
                      ],
                      "when": {
                        "activate": "2016-08-31T18:00:00.0000000+00:00",
                        "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                      }
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policies/page?filter=&sortBy=&limit=&page=",
                  "links": []
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policies/{code}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "GetPolicy: Get Policy",
        "description": "Gets an identified Policy",
        "operationId": "GetPolicy",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Policy",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a specific Policy",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  "description": "Example policy demonstrating the granting of access to some resources",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ],
                  "for": [
                    {
                      "effectiveRange": {
                        "from": "2015-12-25T00:00:00.0000000+00:00",
                        "to": "2020-12-25T00:00:00.0000000+00:00"
                      }
                    },
                    {
                      "asAtRangeForSpec": {
                        "from": {
                          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                        },
                        "to": {
                          "value": "AsAt=Latest"
                        }
                      }
                    }
                  ],
                  "if": [
                    {
                      "ifRequestHeaderExpression": {
                        "headerName": "organisation.specific.group.header",
                        "operator": "EqualsCaseInsensitive",
                        "value": "special-group"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  "description": "Example policy demonstrating the granting of access to some resources",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ],
                  "for": [
                    {
                      "effectiveRange": {
                        "from": "2015-12-25T00:00:00.0000000+00:00",
                        "to": "2020-12-25T00:00:00.0000000+00:00"
                      }
                    },
                    {
                      "asAtRangeForSpec": {
                        "from": {
                          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                        },
                        "to": {
                          "value": "AsAt=Latest"
                        }
                      }
                    }
                  ],
                  "if": [
                    {
                      "ifRequestHeaderExpression": {
                        "headerName": "organisation.specific.group.header",
                        "operator": "EqualsCaseInsensitive",
                        "value": "special-group"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  "description": "Example policy demonstrating the granting of access to some resources",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ],
                  "for": [
                    {
                      "effectiveRange": {
                        "from": "2015-12-25T00:00:00.0000000+00:00",
                        "to": "2020-12-25T00:00:00.0000000+00:00"
                      }
                    },
                    {
                      "asAtRangeForSpec": {
                        "from": {
                          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                        },
                        "to": {
                          "value": "AsAt=Latest"
                        }
                      }
                    }
                  ],
                  "if": [
                    {
                      "ifRequestHeaderExpression": {
                        "headerName": "organisation.specific.group.header",
                        "operator": "EqualsCaseInsensitive",
                        "value": "special-group"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "DeletePolicy: Delete Policy",
        "description": "Deletes an identified Policy",
        "operationId": "DeletePolicy",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Policy",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "put": {
        "tags": [
          "Policies"
        ],
        "summary": "UpdatePolicy: Update Policy",
        "description": "Updates a Policy",
        "operationId": "UpdatePolicy",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Policy",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated definition of the Policy",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              },
              "example": {
                "description": "Example policy demonstrating their update",
                "applications": [
                  "LUSID"
                ],
                "grant": "Allow",
                "selectors": [
                  {
                    "idSelectorDefinition": {
                      "identifier": {
                        "scope": "official"
                      },
                      "actions": [
                        {
                          "scope": "default",
                          "activity": "Read",
                          "entity": "Portfolio"
                        },
                        {
                          "scope": "default",
                          "activity": "Aggregate",
                          "entity": "Portfolio"
                        }
                      ],
                      "name": "access-official-scope",
                      "description": "Allow readonly access to the 'official' scope"
                    }
                  }
                ],
                "for": [
                  {
                    "effectiveRange": {
                      "from": "2015-12-25T00:00:00.0000000+00:00",
                      "to": "2020-12-25T00:00:00.0000000+00:00"
                    }
                  },
                  {
                    "asAtRangeForSpec": {
                      "from": {
                        "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                      },
                      "to": {
                        "value": "AsAt=Latest"
                      }
                    }
                  }
                ],
                "if": [
                  {
                    "ifRequestHeaderExpression": {
                      "headerName": "organisation.specific.group.header",
                      "operator": "EqualsCaseInsensitive",
                      "value": "special-group"
                    }
                  }
                ],
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              },
              "example": {
                "description": "Example policy demonstrating their update",
                "applications": [
                  "LUSID"
                ],
                "grant": "Allow",
                "selectors": [
                  {
                    "idSelectorDefinition": {
                      "identifier": {
                        "scope": "official"
                      },
                      "actions": [
                        {
                          "scope": "default",
                          "activity": "Read",
                          "entity": "Portfolio"
                        },
                        {
                          "scope": "default",
                          "activity": "Aggregate",
                          "entity": "Portfolio"
                        }
                      ],
                      "name": "access-official-scope",
                      "description": "Allow readonly access to the 'official' scope"
                    }
                  }
                ],
                "for": [
                  {
                    "effectiveRange": {
                      "from": "2015-12-25T00:00:00.0000000+00:00",
                      "to": "2020-12-25T00:00:00.0000000+00:00"
                    }
                  },
                  {
                    "asAtRangeForSpec": {
                      "from": {
                        "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                      },
                      "to": {
                        "value": "AsAt=Latest"
                      }
                    }
                  }
                ],
                "if": [
                  {
                    "ifRequestHeaderExpression": {
                      "headerName": "organisation.specific.group.header",
                      "operator": "EqualsCaseInsensitive",
                      "value": "special-group"
                    }
                  }
                ],
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              },
              "example": {
                "description": "Example policy demonstrating their update",
                "applications": [
                  "LUSID"
                ],
                "grant": "Allow",
                "selectors": [
                  {
                    "idSelectorDefinition": {
                      "identifier": {
                        "scope": "official"
                      },
                      "actions": [
                        {
                          "scope": "default",
                          "activity": "Read",
                          "entity": "Portfolio"
                        },
                        {
                          "scope": "default",
                          "activity": "Aggregate",
                          "entity": "Portfolio"
                        }
                      ],
                      "name": "access-official-scope",
                      "description": "Allow readonly access to the 'official' scope"
                    }
                  }
                ],
                "for": [
                  {
                    "effectiveRange": {
                      "from": "2015-12-25T00:00:00.0000000+00:00",
                      "to": "2020-12-25T00:00:00.0000000+00:00"
                    }
                  },
                  {
                    "asAtRangeForSpec": {
                      "from": {
                        "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                      },
                      "to": {
                        "value": "AsAt=Latest"
                      }
                    }
                  }
                ],
                "if": [
                  {
                    "ifRequestHeaderExpression": {
                      "headerName": "organisation.specific.group.header",
                      "operator": "EqualsCaseInsensitive",
                      "value": "special-group"
                    }
                  }
                ],
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              },
              "example": {
                "description": "Example policy demonstrating their update",
                "applications": [
                  "LUSID"
                ],
                "grant": "Allow",
                "selectors": [
                  {
                    "idSelectorDefinition": {
                      "identifier": {
                        "scope": "official"
                      },
                      "actions": [
                        {
                          "scope": "default",
                          "activity": "Read",
                          "entity": "Portfolio"
                        },
                        {
                          "scope": "default",
                          "activity": "Aggregate",
                          "entity": "Portfolio"
                        }
                      ],
                      "name": "access-official-scope",
                      "description": "Allow readonly access to the 'official' scope"
                    }
                  }
                ],
                "for": [
                  {
                    "effectiveRange": {
                      "from": "2015-12-25T00:00:00.0000000+00:00",
                      "to": "2020-12-25T00:00:00.0000000+00:00"
                    }
                  },
                  {
                    "asAtRangeForSpec": {
                      "from": {
                        "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                      },
                      "to": {
                        "value": "AsAt=Latest"
                      }
                    }
                  }
                ],
                "if": [
                  {
                    "ifRequestHeaderExpression": {
                      "headerName": "organisation.specific.group.header",
                      "operator": "EqualsCaseInsensitive",
                      "value": "special-group"
                    }
                  }
                ],
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated policy",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  "description": "Example policy demonstrating the granting of access to some resources",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ],
                  "for": [
                    {
                      "effectiveRange": {
                        "from": "2015-12-25T00:00:00.0000000+00:00",
                        "to": "2020-12-25T00:00:00.0000000+00:00"
                      }
                    },
                    {
                      "asAtRangeForSpec": {
                        "from": {
                          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                        },
                        "to": {
                          "value": "AsAt=Latest"
                        }
                      }
                    }
                  ],
                  "if": [
                    {
                      "ifRequestHeaderExpression": {
                        "headerName": "organisation.specific.group.header",
                        "operator": "EqualsCaseInsensitive",
                        "value": "special-group"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  "description": "Example policy demonstrating the granting of access to some resources",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ],
                  "for": [
                    {
                      "effectiveRange": {
                        "from": "2015-12-25T00:00:00.0000000+00:00",
                        "to": "2020-12-25T00:00:00.0000000+00:00"
                      }
                    },
                    {
                      "asAtRangeForSpec": {
                        "from": {
                          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                        },
                        "to": {
                          "value": "AsAt=Latest"
                        }
                      }
                    }
                  ],
                  "if": [
                    {
                      "ifRequestHeaderExpression": {
                        "headerName": "organisation.specific.group.header",
                        "operator": "EqualsCaseInsensitive",
                        "value": "special-group"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  "description": "Example policy demonstrating the granting of access to some resources",
                  "applications": [
                    "LUSID"
                  ],
                  "grant": "Allow",
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ],
                  "for": [
                    {
                      "effectiveRange": {
                        "from": "2015-12-25T00:00:00.0000000+00:00",
                        "to": "2020-12-25T00:00:00.0000000+00:00"
                      }
                    },
                    {
                      "asAtRangeForSpec": {
                        "from": {
                          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
                        },
                        "to": {
                          "value": "AsAt=Latest"
                        }
                      }
                    }
                  ],
                  "if": [
                    {
                      "ifRequestHeaderExpression": {
                        "headerName": "organisation.specific.group.header",
                        "operator": "EqualsCaseInsensitive",
                        "value": "special-group"
                      }
                    }
                  ],
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policycollections": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "ListPolicyCollections: List PolicyCollections",
        "description": "Gets all PolicyCollections in a scope. For pagination support, use PagePolicyCollections",
        "operationId": "ListPolicyCollections",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The requested scope",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Optional. When paginating, skip this number of results",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. 2000 if not provided. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested list of PolicyCollections",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyCollectionResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "organisation-wide-policies"
                    },
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ],
                    "description": "Collection of organisation wide policies"
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyCollectionResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "organisation-wide-policies"
                    },
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ],
                    "description": "Collection of organisation wide policies"
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyCollectionResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "organisation-wide-policies"
                    },
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ],
                    "description": "Collection of organisation wide policies"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "CreatePolicyCollection: Create PolicyCollection",
        "description": "Creates a PolicyCollection",
        "operationId": "CreatePolicyCollection",
        "requestBody": {
          "description": "The definition of the PolicyCollection",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionCreationRequest"
              },
              "example": {
                "code": "example-policy-collection",
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "metadata": {},
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ],
                "description": "Example policy collection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionCreationRequest"
              },
              "example": {
                "code": "example-policy-collection",
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "metadata": {},
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ],
                "description": "Example policy collection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionCreationRequest"
              },
              "example": {
                "code": "example-policy-collection",
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "metadata": {},
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ],
                "description": "Example policy collection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionCreationRequest"
              },
              "example": {
                "code": "example-policy-collection",
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "metadata": {},
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ],
                "description": "Example policy collection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created PolicyCollection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policycollections/page": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "PagePolicyCollections: Page PolicyCollections",
        "description": "Gets all PolicyCollections with pagination support.",
        "operationId": "PagePolicyCollections",
        "parameters": [
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. Not currently used. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "maxLength": 16384,
              "minLength": 1,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. 2000 if not provided. When paginating, limit the number of returned results to this many",
            "schema": {
              "maximum": 5000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Optional. Paging token returned from a previous result",
            "schema": {
              "maxLength": 500,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\+/]*={0,3}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested list of PolicyCollections",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyCollectionResponse"
                },
                "example": {
                  "values": [
                    {
                      "id": {
                        "scope": "default",
                        "code": "organisation-wide-policies"
                      },
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ],
                      "description": "Collection of organisation wide policies"
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policycollections/page?filter=&sortBy=&limit=&page=",
                  "links": []
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyCollectionResponse"
                },
                "example": {
                  "values": [
                    {
                      "id": {
                        "scope": "default",
                        "code": "organisation-wide-policies"
                      },
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ],
                      "description": "Collection of organisation wide policies"
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policycollections/page?filter=&sortBy=&limit=&page=",
                  "links": []
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyCollectionResponse"
                },
                "example": {
                  "values": [
                    {
                      "id": {
                        "scope": "default",
                        "code": "organisation-wide-policies"
                      },
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ],
                      "description": "Collection of organisation wide policies"
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policycollections/page?filter=&sortBy=&limit=&page=",
                  "links": []
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policycollections/{code}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "GetPolicyCollection: Get PolicyCollection",
        "description": "Gets an identified PolicyCollection",
        "operationId": "GetPolicyCollection",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the PolicyCollection",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested PolicyCollection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "DeletePolicyCollection: Delete PolicyCollection",
        "description": "Deletes an identified PolicyCollection",
        "operationId": "DeletePolicyCollection",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the PolicyCollection",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "put": {
        "tags": [
          "Policies"
        ],
        "summary": "UpdatePolicyCollection: Update PolicyCollection",
        "description": "Updates a PolicyCollection",
        "operationId": "UpdatePolicyCollection",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the PolicyCollection",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated definition of the PolicyCollection",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionUpdateRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "metadata": {},
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ],
                "description": "Example policy collection"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionUpdateRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "metadata": {},
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ],
                "description": "Example policy collection"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionUpdateRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "metadata": {},
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ],
                "description": "Example policy collection"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionUpdateRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "metadata": {},
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ],
                "description": "Example policy collection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated PolicyCollection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policycollections/{code}/add": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "AddToPolicyCollection: Add To PolicyCollection",
        "description": "Add Policies and/or PolicyCollections to a PolicyCollection",
        "operationId": "AddToPolicyCollection",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the PolicyCollection",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ids of the PolicyCollections and/or Policies to add to the PolicyCollection",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddToPolicyCollectionRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToPolicyCollectionRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToPolicyCollectionRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddToPolicyCollectionRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated PolicyCollection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policycollections/{code}/remove": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "RemoveFromPolicyCollection: Remove From PolicyCollection",
        "description": "Remove Policies and/or PolicyCollections from a PolicyCollection",
        "operationId": "RemoveFromPolicyCollection",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the PolicyCollection",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ids of the PolicyCollections and/or Policies to remove from the PolicyCollection",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFromPolicyCollectionRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFromPolicyCollectionRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFromPolicyCollectionRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFromPolicyCollectionRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "default",
                    "code": "official-portfolios-read-only"
                  },
                  {
                    "scope": "default",
                    "code": "desk-portfolios"
                  }
                ],
                "policyCollections": [
                  {
                    "scope": "default",
                    "code": "CompanyEmployeeAccess"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated PolicyCollection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "organisation-wide-policies"
                  },
                  "policies": [
                    {
                      "scope": "default",
                      "code": "official-portfolios-read-only"
                    },
                    {
                      "scope": "default",
                      "code": "desk-portfolios"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "default",
                      "code": "CompanyEmployeeAccess"
                    }
                  ],
                  "description": "Collection of organisation wide policies"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/policytemplates": {
      "post": {
        "tags": [
          "PolicyTemplates"
        ],
        "summary": "[EXPERIMENTAL] CreatePolicyTemplate: Create a Policy Template",
        "description": "Creates a Policy Template",
        "operationId": "CreatePolicyTemplate",
        "requestBody": {
          "description": "The definition of the policy template",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyTemplateCreationRequest"
              },
              "example": {
                "code": "official-portfolios-read-only",
                "displayName": "updated-policy-template",
                "description": "Example policy template for a policy that grants access to some resource",
                "templatedSelectors": [
                  {
                    "application": "LUSID",
                    "tag": "Data",
                    "selector": {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyTemplateCreationRequest"
              },
              "example": {
                "code": "official-portfolios-read-only",
                "displayName": "updated-policy-template",
                "description": "Example policy template for a policy that grants access to some resource",
                "templatedSelectors": [
                  {
                    "application": "LUSID",
                    "tag": "Data",
                    "selector": {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyTemplateCreationRequest"
              },
              "example": {
                "code": "official-portfolios-read-only",
                "displayName": "updated-policy-template",
                "description": "Example policy template for a policy that grants access to some resource",
                "templatedSelectors": [
                  {
                    "application": "LUSID",
                    "tag": "Data",
                    "selector": {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyTemplateCreationRequest"
              },
              "example": {
                "code": "official-portfolios-read-only",
                "displayName": "updated-policy-template",
                "description": "Example policy template for a policy that grants access to some resource",
                "templatedSelectors": [
                  {
                    "application": "LUSID",
                    "tag": "Data",
                    "selector": {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Policy Template",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Experimental"
      },
      "get": {
        "tags": [
          "PolicyTemplates"
        ],
        "summary": "[EXPERIMENTAL] ListPolicyTemplates: List Policy Templates",
        "description": "Gets all Policy Templates with pagination support.",
        "operationId": "ListPolicyTemplates",
        "parameters": [
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "maxLength": 16384,
              "minLength": 1,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Optional. Paging token returned from a previous result",
            "schema": {
              "maxLength": 500,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\+/]*={0,3}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Policy Templates",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyTemplateResponse"
                },
                "example": {
                  "values": [
                    {
                      "displayName": "example-policy-template",
                      "scope": "default",
                      "code": "official-portfolios-read-only",
                      "description": "Example policy template for a policy that grants access to some resource",
                      "applications": [
                        "LUSID"
                      ],
                      "tags": [
                        "Data"
                      ],
                      "templatedSelectors": [
                        {
                          "application": "LUSID",
                          "tag": "Data",
                          "selector": {
                            "idSelectorDefinition": {
                              "identifier": {
                                "scope": "official"
                              },
                              "actions": [
                                {
                                  "scope": "default",
                                  "activity": "Read",
                                  "entity": "Portfolio"
                                },
                                {
                                  "scope": "default",
                                  "activity": "Aggregate",
                                  "entity": "Portfolio"
                                }
                              ],
                              "name": "access-official-scope",
                              "description": "Allow readonly access to the 'official' scope"
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policytemplates/",
                  "links": []
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyTemplateResponse"
                },
                "example": {
                  "values": [
                    {
                      "displayName": "example-policy-template",
                      "scope": "default",
                      "code": "official-portfolios-read-only",
                      "description": "Example policy template for a policy that grants access to some resource",
                      "applications": [
                        "LUSID"
                      ],
                      "tags": [
                        "Data"
                      ],
                      "templatedSelectors": [
                        {
                          "application": "LUSID",
                          "tag": "Data",
                          "selector": {
                            "idSelectorDefinition": {
                              "identifier": {
                                "scope": "official"
                              },
                              "actions": [
                                {
                                  "scope": "default",
                                  "activity": "Read",
                                  "entity": "Portfolio"
                                },
                                {
                                  "scope": "default",
                                  "activity": "Aggregate",
                                  "entity": "Portfolio"
                                }
                              ],
                              "name": "access-official-scope",
                              "description": "Allow readonly access to the 'official' scope"
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policytemplates/",
                  "links": []
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfPolicyTemplateResponse"
                },
                "example": {
                  "values": [
                    {
                      "displayName": "example-policy-template",
                      "scope": "default",
                      "code": "official-portfolios-read-only",
                      "description": "Example policy template for a policy that grants access to some resource",
                      "applications": [
                        "LUSID"
                      ],
                      "tags": [
                        "Data"
                      ],
                      "templatedSelectors": [
                        {
                          "application": "LUSID",
                          "tag": "Data",
                          "selector": {
                            "idSelectorDefinition": {
                              "identifier": {
                                "scope": "official"
                              },
                              "actions": [
                                {
                                  "scope": "default",
                                  "activity": "Read",
                                  "entity": "Portfolio"
                                },
                                {
                                  "scope": "default",
                                  "activity": "Aggregate",
                                  "entity": "Portfolio"
                                }
                              ],
                              "name": "access-official-scope",
                              "description": "Allow readonly access to the 'official' scope"
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/policytemplates/",
                  "links": []
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/policytemplates/$generatepolicy": {
      "post": {
        "tags": [
          "PolicyTemplates"
        ],
        "summary": "[EXPERIMENTAL] GeneratePolicyFromTemplate: Generate policy from template",
        "description": "Generates policies from templates",
        "operationId": "GeneratePolicyFromTemplate",
        "parameters": [
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          }
        ],
        "requestBody": {
          "description": "Definition of the generate request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePolicyFromTemplateRequest"
              },
              "example": {
                "templateSelection": [
                  {
                    "scope": "default",
                    "code": "example-policy-template",
                    "selectorTags": [
                      "Data",
                      "Api"
                    ]
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePolicyFromTemplateRequest"
              },
              "example": {
                "templateSelection": [
                  {
                    "scope": "default",
                    "code": "example-policy-template",
                    "selectorTags": [
                      "Data",
                      "Api"
                    ]
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePolicyFromTemplateRequest"
              },
              "example": {
                "templateSelection": [
                  {
                    "scope": "default",
                    "code": "example-policy-template",
                    "selectorTags": [
                      "Data",
                      "Api"
                    ]
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePolicyFromTemplateRequest"
              },
              "example": {
                "templateSelection": [
                  {
                    "scope": "default",
                    "code": "example-policy-template",
                    "selectorTags": [
                      "Data",
                      "Api"
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedPolicyComponents"
                },
                "example": {
                  "applications": [
                    "LUSID"
                  ],
                  "templateMetadata": {
                    "templateSelection": [
                      {
                        "scope": "default",
                        "code": "some-template-code",
                        "selectorTags": [
                          "Data"
                        ]
                      }
                    ],
                    "buildAsAt": "2024-01-09T00:00:00.0000000+00:00"
                  },
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedPolicyComponents"
                },
                "example": {
                  "applications": [
                    "LUSID"
                  ],
                  "templateMetadata": {
                    "templateSelection": [
                      {
                        "scope": "default",
                        "code": "some-template-code",
                        "selectorTags": [
                          "Data"
                        ]
                      }
                    ],
                    "buildAsAt": "2024-01-09T00:00:00.0000000+00:00"
                  },
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedPolicyComponents"
                },
                "example": {
                  "applications": [
                    "LUSID"
                  ],
                  "templateMetadata": {
                    "templateSelection": [
                      {
                        "scope": "default",
                        "code": "some-template-code",
                        "selectorTags": [
                          "Data"
                        ]
                      }
                    ],
                    "buildAsAt": "2024-01-09T00:00:00.0000000+00:00"
                  },
                  "selectors": [
                    {
                      "idSelectorDefinition": {
                        "identifier": {
                          "scope": "official"
                        },
                        "actions": [
                          {
                            "scope": "default",
                            "activity": "Read",
                            "entity": "Portfolio"
                          },
                          {
                            "scope": "default",
                            "activity": "Aggregate",
                            "entity": "Portfolio"
                          }
                        ],
                        "name": "access-official-scope",
                        "description": "Allow readonly access to the 'official' scope"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/policytemplates/{code}": {
      "get": {
        "tags": [
          "PolicyTemplates"
        ],
        "summary": "[EXPERIMENTAL] GetPolicyTemplate: Retrieving one Policy Template",
        "description": "Gets an identified Policy Template",
        "operationId": "GetPolicyTemplate",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Policy Template",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data. If not specified defaults to current time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the Policy Template",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a specific Policy Template",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Experimental"
      },
      "delete": {
        "tags": [
          "PolicyTemplates"
        ],
        "summary": "[EXPERIMENTAL] DeletePolicyTemplate: Deleting a policy template",
        "description": "Deletes an identified Policy Template",
        "operationId": "DeletePolicyTemplate",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Policy Template",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the Policy Template",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Experimental"
      },
      "put": {
        "tags": [
          "PolicyTemplates"
        ],
        "summary": "[EXPERIMENTAL] UpdatePolicyTemplate: Update a Policy Template",
        "description": "Updates an identified Policy Template",
        "operationId": "UpdatePolicyTemplate",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Code of the policy template to update",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Definition of the updated policy template",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyTemplateUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyTemplateUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyTemplateUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyTemplateUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Policy Template",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyTemplateResponse"
                },
                "example": {
                  "displayName": "example-policy-template",
                  "scope": "default",
                  "code": "official-portfolios-read-only",
                  "description": "Example policy template for a policy that grants access to some resource",
                  "applications": [
                    "LUSID"
                  ],
                  "tags": [
                    "Data"
                  ],
                  "templatedSelectors": [
                    {
                      "application": "LUSID",
                      "tag": "Data",
                      "selector": {
                        "idSelectorDefinition": {
                          "identifier": {
                            "scope": "official"
                          },
                          "actions": [
                            {
                              "scope": "default",
                              "activity": "Read",
                              "entity": "Portfolio"
                            },
                            {
                              "scope": "default",
                              "activity": "Aggregate",
                              "entity": "Portfolio"
                            }
                          ],
                          "name": "access-official-scope",
                          "description": "Allow readonly access to the 'official' scope"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "ListRoles: List Roles",
        "description": "Gets all Roles in a scope",
        "operationId": "ListRoles",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use all scopes if not supplied. The requested scope",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Optional. When paginating, skip this number of results",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Roles",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "DevelopersRole"
                    },
                    "roleHierarchyIndex": 50,
                    "description": "An example Role to identify my Developers",
                    "resource": {
                      "policyIdRoleResource": {
                        "policies": [
                          {
                            "scope": "default",
                            "code": "official-portfolios-read-only"
                          },
                          {
                            "scope": "default",
                            "code": "desk-portfolios"
                          }
                        ],
                        "policyCollections": [
                          {
                            "scope": "default",
                            "code": "CompanyEmployeeAccess"
                          }
                        ]
                      }
                    },
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    },
                    "permission": "Read"
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "DevelopersRole"
                    },
                    "roleHierarchyIndex": 50,
                    "description": "An example Role to identify my Developers",
                    "resource": {
                      "policyIdRoleResource": {
                        "policies": [
                          {
                            "scope": "default",
                            "code": "official-portfolios-read-only"
                          },
                          {
                            "scope": "default",
                            "code": "desk-portfolios"
                          }
                        ],
                        "policyCollections": [
                          {
                            "scope": "default",
                            "code": "CompanyEmployeeAccess"
                          }
                        ]
                      }
                    },
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    },
                    "permission": "Read"
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                },
                "example": [
                  {
                    "id": {
                      "scope": "default",
                      "code": "DevelopersRole"
                    },
                    "roleHierarchyIndex": 50,
                    "description": "An example Role to identify my Developers",
                    "resource": {
                      "policyIdRoleResource": {
                        "policies": [
                          {
                            "scope": "default",
                            "code": "official-portfolios-read-only"
                          },
                          {
                            "scope": "default",
                            "code": "desk-portfolios"
                          }
                        ],
                        "policyCollections": [
                          {
                            "scope": "default",
                            "code": "CompanyEmployeeAccess"
                          }
                        ]
                      }
                    },
                    "when": {
                      "activate": "2016-08-31T18:00:00.0000000+00:00",
                      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                    },
                    "permission": "Read"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "CreateRole: Create Role",
        "description": "Creates a Role",
        "operationId": "CreateRole",
        "requestBody": {
          "description": "The definition of the Role",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequest"
              },
              "example": {
                "code": "example-organisation-role-id",
                "description": "This is an example role to demonstrate their creation",
                "resource": {
                  "policyIdRoleResource": {
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ]
                  }
                },
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequest"
              },
              "example": {
                "code": "example-organisation-role-id",
                "description": "This is an example role to demonstrate their creation",
                "resource": {
                  "policyIdRoleResource": {
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ]
                  }
                },
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequest"
              },
              "example": {
                "code": "example-organisation-role-id",
                "description": "This is an example role to demonstrate their creation",
                "resource": {
                  "policyIdRoleResource": {
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ]
                  }
                },
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequest"
              },
              "example": {
                "code": "example-organisation-role-id",
                "description": "This is an example role to demonstrate their creation",
                "resource": {
                  "policyIdRoleResource": {
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ]
                  }
                },
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Role",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/roles/{code}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "GetRole: Get Role",
        "description": "Gets an identified Role",
        "operationId": "GetRole",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-nullable": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use default scope if not supplied. The scope of the Role",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested Role",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "DeleteRole: Delete Role",
        "description": "Deletes an identified Role",
        "operationId": "DeleteRole",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": ">Optional. Will use default scope if not supplied. The scope of the Role",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "UpdateRole: Update Role",
        "description": "Updates a Role",
        "operationId": "UpdateRole",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": ">Optional. Will use default scope if not supplied. The scope of the Role",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "beforeScope",
            "in": "query",
            "description": "Optional. The scope of the Role. Will use default scope if not supplied.",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "beforeCode",
            "in": "query",
            "description": "Optional. The code of the Role",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "afterScope",
            "in": "query",
            "description": "Optional. The scope of the Role. Will use default scope if not supplied.",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "afterCode",
            "in": "query",
            "description": "Optional. The code of the Role",
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated definition of the Role",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              },
              "example": {
                "description": "This is an example role to demonstrate their update",
                "resource": {
                  "policyIdRoleResource": {
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ]
                  }
                },
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              },
              "example": {
                "description": "This is an example role to demonstrate their update",
                "resource": {
                  "policyIdRoleResource": {
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ]
                  }
                },
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              },
              "example": {
                "description": "This is an example role to demonstrate their update",
                "resource": {
                  "policyIdRoleResource": {
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ]
                  }
                },
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              },
              "example": {
                "description": "This is an example role to demonstrate their update",
                "resource": {
                  "policyIdRoleResource": {
                    "policies": [
                      {
                        "scope": "default",
                        "code": "official-portfolios-read-only"
                      },
                      {
                        "scope": "default",
                        "code": "desk-portfolios"
                      }
                    ],
                    "policyCollections": [
                      {
                        "scope": "default",
                        "code": "CompanyEmployeeAccess"
                      }
                    ]
                  }
                },
                "when": {
                  "activate": "2016-08-31T18:00:00.0000000+00:00",
                  "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated Role",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/roles/{scope}/{code}/policycollections": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "AddPolicyCollectionToRole: Add policy collections to a role",
        "description": "Assigns policy collections to a role",
        "operationId": "AddPolicyCollectionToRole",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The policy collections to add",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
                "policyCollections": [
                  {
                    "scope": "ScopeValue",
                    "code": "SomePolCollectionCode"
                  },
                  {
                    "scope": "ScopeValue2",
                    "code": "AnotherPolicyCollection"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
                "policyCollections": [
                  {
                    "scope": "ScopeValue",
                    "code": "SomePolCollectionCode"
                  },
                  {
                    "scope": "ScopeValue2",
                    "code": "AnotherPolicyCollection"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
                "policyCollections": [
                  {
                    "scope": "ScopeValue",
                    "code": "SomePolCollectionCode"
                  },
                  {
                    "scope": "ScopeValue2",
                    "code": "AnotherPolicyCollection"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
                "policyCollections": [
                  {
                    "scope": "ScopeValue",
                    "code": "SomePolCollectionCode"
                  },
                  {
                    "scope": "ScopeValue2",
                    "code": "AnotherPolicyCollection"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "AddPolicyCollectionToRole",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/roles/{scope}/{code}/policycollections/{policycollectionscope}/{policycollectioncode}": {
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "RemovePolicyCollectionFromRole: Remove policy collection from role",
        "description": "Removes a policy collection from a role",
        "operationId": "RemovePolicyCollectionFromRole",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "policycollectionscope",
            "in": "path",
            "description": "The scope of policy collection to remove from the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "policycollectioncode",
            "in": "path",
            "description": "The code of the policy collection to remove from the Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RemovePolicyCollectionFromRole",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": {
                    "scope": "default",
                    "code": "DevelopersRole"
                  },
                  "roleHierarchyIndex": 50,
                  "description": "An example Role to identify my Developers",
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "default",
                          "code": "official-portfolios-read-only"
                        },
                        {
                          "scope": "default",
                          "code": "desk-portfolios"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "default",
                          "code": "CompanyEmployeeAccess"
                        }
                      ]
                    }
                  },
                  "when": {
                    "activate": "2016-08-31T18:00:00.0000000+00:00",
                    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
                  },
                  "permission": "Read"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/userroles": {
      "post": {
        "tags": [
          "User-roles"
        ],
        "summary": "CreateUserRole: Create a user-role",
        "description": "Creates a new user-role.",
        "operationId": "CreateUserRole",
        "requestBody": {
          "description": "Definition of the user-role to create.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreationRequest"
              },
              "example": {
                "userId": "ExampleUserId",
                "resource": {
                  "policies": [
                    {
                      "scope": "ExamplePolicyId",
                      "code": "ExampleScope"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "ExamplePolicyCollectionId",
                      "code": "ExampleScope"
                    }
                  ]
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreationRequest"
              },
              "example": {
                "userId": "ExampleUserId",
                "resource": {
                  "policies": [
                    {
                      "scope": "ExamplePolicyId",
                      "code": "ExampleScope"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "ExamplePolicyCollectionId",
                      "code": "ExampleScope"
                    }
                  ]
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreationRequest"
              },
              "example": {
                "userId": "ExampleUserId",
                "resource": {
                  "policies": [
                    {
                      "scope": "ExamplePolicyId",
                      "code": "ExampleScope"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "ExamplePolicyCollectionId",
                      "code": "ExampleScope"
                    }
                  ]
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreationRequest"
              },
              "example": {
                "userId": "ExampleUserId",
                "resource": {
                  "policies": [
                    {
                      "scope": "ExamplePolicyId",
                      "code": "ExampleScope"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "ExamplePolicyCollectionId",
                      "code": "ExampleScope"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User role that has been created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "get": {
        "tags": [
          "User-roles"
        ],
        "summary": "ListUserRoles: List user-roles",
        "description": "Lists all user-roles and pages.",
        "operationId": "ListUserRoles",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "maxLength": 16384,
              "minLength": 0,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "maxLength": 16384,
              "minLength": 1,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "maximum": 5000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "Optional. Encoded page string returned from a previous search result that will retrieve\r\n            the next page of data.",
            "schema": {
              "maxLength": 500,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\+/]*={0,3}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfUserRoleResponse"
                },
                "example": {
                  "values": [
                    {
                      "resource": {
                        "policyIdRoleResource": {
                          "policies": [
                            {
                              "scope": "ExamplePolicyId",
                              "code": "ExampleScope"
                            }
                          ],
                          "policyCollections": [
                            {
                              "scope": "ExamplePolicyCollectionId",
                              "code": "ExampleScope"
                            }
                          ]
                        }
                      },
                      "id": {
                        "scope": "default",
                        "code": "ExampleUserId"
                      }
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/userroles?filter=filter&sortBy=sortBy&limit=limit&page=page",
                  "links": []
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfUserRoleResponse"
                },
                "example": {
                  "values": [
                    {
                      "resource": {
                        "policyIdRoleResource": {
                          "policies": [
                            {
                              "scope": "ExamplePolicyId",
                              "code": "ExampleScope"
                            }
                          ],
                          "policyCollections": [
                            {
                              "scope": "ExamplePolicyCollectionId",
                              "code": "ExampleScope"
                            }
                          ]
                        }
                      },
                      "id": {
                        "scope": "default",
                        "code": "ExampleUserId"
                      }
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/userroles?filter=filter&sortBy=sortBy&limit=limit&page=page",
                  "links": []
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfUserRoleResponse"
                },
                "example": {
                  "values": [
                    {
                      "resource": {
                        "policyIdRoleResource": {
                          "policies": [
                            {
                              "scope": "ExamplePolicyId",
                              "code": "ExampleScope"
                            }
                          ],
                          "policyCollections": [
                            {
                              "scope": "ExamplePolicyCollectionId",
                              "code": "ExampleScope"
                            }
                          ]
                        }
                      },
                      "id": {
                        "scope": "default",
                        "code": "ExampleUserId"
                      }
                    }
                  ],
                  "href": "https://example.lusid.com/access/api/userroles?filter=filter&sortBy=sortBy&limit=limit&page=page",
                  "links": []
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/userroles/{userid}": {
      "get": {
        "tags": [
          "User-roles"
        ],
        "summary": "GetUserRole: Get a user-role",
        "description": "Get an identified user-role.",
        "operationId": "GetUserRole",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of the user-role to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user role.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "delete": {
        "tags": [
          "User-roles"
        ],
        "summary": "DeleteUserRole: Delete a user-role",
        "description": "Deletes an identified user-role.",
        "operationId": "DeleteUserRole",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of the user-role to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/userroles/{userid}/policies": {
      "post": {
        "tags": [
          "User-roles"
        ],
        "summary": "AddPolicyToUserRole: Add a policy to a user-role",
        "description": "Adds a policy to a user-role.",
        "operationId": "AddPolicyToUserRole",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of the User Role to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dto of the policy to be added.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyToRoleRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "ExampleAddPolicyScope",
                    "code": "ExampleAddPolicyCode"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyToRoleRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "ExampleAddPolicyScope",
                    "code": "ExampleAddPolicyCode"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyToRoleRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "ExampleAddPolicyScope",
                    "code": "ExampleAddPolicyCode"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyToRoleRequest"
              },
              "example": {
                "policies": [
                  {
                    "scope": "ExampleAddPolicyScope",
                    "code": "ExampleAddPolicyCode"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User role with added policy collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/userroles/{userid}/policies/{policyScope}/{policyCode}": {
      "delete": {
        "tags": [
          "User-roles"
        ],
        "summary": "RemovePolicyFromUserRole: Remove a policy from a user-role",
        "description": "Removes a policy from a user-role.",
        "operationId": "RemovePolicyFromUserRole",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of the User Role to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyScope",
            "in": "path",
            "description": "The scope of the policy to remove from the User Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "policyCode",
            "in": "path",
            "description": "The code of the policy to remove from the User Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/userroles/{userid}/policycollections": {
      "post": {
        "tags": [
          "User-roles"
        ],
        "summary": "AddPolicyCollectionToUserRole: Add a policy collection to a user-role",
        "description": "Adds a policy collection to a user-role.",
        "operationId": "AddPolicyCollectionToUserRole",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of the User Role to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dto of the policy collection to be added.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
                "policyCollections": [
                  {
                    "scope": "ExampleAddPolicyCollectionScope",
                    "code": "ExampleAddPolicyCollectionCode"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
                "policyCollections": [
                  {
                    "scope": "ExampleAddPolicyCollectionScope",
                    "code": "ExampleAddPolicyCollectionCode"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
                "policyCollections": [
                  {
                    "scope": "ExampleAddPolicyCollectionScope",
                    "code": "ExampleAddPolicyCollectionCode"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
                "policyCollections": [
                  {
                    "scope": "ExampleAddPolicyCollectionScope",
                    "code": "ExampleAddPolicyCollectionCode"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User role with added policy collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/userroles/{userid}/policycollections/{policyCollectionScope}/{policyCollectionCode}": {
      "delete": {
        "tags": [
          "User-roles"
        ],
        "summary": "RemovePolicyCollectionFromUserRole: Remove a policy collection from a user-role",
        "description": "Removes a policy collection from a user-role.",
        "operationId": "RemovePolicyCollectionFromUserRole",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of the User Role to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyCollectionScope",
            "in": "path",
            "description": "The scope of policy collection to remove from the User Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          },
          {
            "name": "policyCollectionCode",
            "in": "path",
            "description": "The code of the policy collection to remove from the User Role",
            "required": true,
            "schema": {
              "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/userroles/{userid}/update": {
      "post": {
        "tags": [
          "User-roles"
        ],
        "summary": "UpdateUserRole: Update a user-role",
        "description": "Updates an identified user-role.",
        "operationId": "UpdateUserRole",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of the user-role to be updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Definition of the update to apply to the user-role.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleUpdateRequest"
              },
              "example": {
                "resource": {
                  "policies": [
                    {
                      "scope": "ExamplePolicyId",
                      "code": "ExampleScope"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "ExamplePolicyCollectionId",
                      "code": "ExampleScope"
                    }
                  ]
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleUpdateRequest"
              },
              "example": {
                "resource": {
                  "policies": [
                    {
                      "scope": "ExamplePolicyId",
                      "code": "ExampleScope"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "ExamplePolicyCollectionId",
                      "code": "ExampleScope"
                    }
                  ]
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleUpdateRequest"
              },
              "example": {
                "resource": {
                  "policies": [
                    {
                      "scope": "ExamplePolicyId",
                      "code": "ExampleScope"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "ExamplePolicyCollectionId",
                      "code": "ExampleScope"
                    }
                  ]
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleUpdateRequest"
              },
              "example": {
                "resource": {
                  "policies": [
                    {
                      "scope": "ExamplePolicyId",
                      "code": "ExampleScope"
                    }
                  ],
                  "policyCollections": [
                    {
                      "scope": "ExamplePolicyCollectionId",
                      "code": "ExampleScope"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User role that has been updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleResponse"
                },
                "example": {
                  "resource": {
                    "policyIdRoleResource": {
                      "policies": [
                        {
                          "scope": "ExamplePolicyId",
                          "code": "ExampleScope"
                        }
                      ],
                      "policyCollections": [
                        {
                          "scope": "ExamplePolicyCollectionId",
                          "code": "ExampleScope"
                        }
                      ]
                    }
                  },
                  "id": {
                    "scope": "default",
                    "code": "ExampleUserId"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    }
  },
  "components": {
    "schemas": {
      "AccessControlledAction": {
        "required": [
          "action",
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/ActionId"
          },
          "limitedSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdSelectorDefinition"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccessControlledResource": {
        "required": [
          "actions",
          "description"
        ],
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlledAction"
            }
          },
          "identifierParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentifierPartSchema"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActionId": {
        "required": [
          "activity",
          "entity",
          "scope"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "activity": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "entity": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddPolicyCollectionToRoleRequest": {
        "required": [
          "policyCollections"
        ],
        "type": "object",
        "properties": {
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "Identifiers of policy collections to add to a role"
          }
        },
        "additionalProperties": false,
        "description": "Request body used to add Policy Collections to a Role"
      },
      "AddPolicyToRoleRequest": {
        "required": [
          "policies"
        ],
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "Identifiers of policies to add to a role"
          }
        },
        "additionalProperties": false,
        "description": "Request body used to add Policies to a Role"
      },
      "AddToPolicyCollectionRequest": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "The identifiers of the Policies to be added to the collection.",
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "The identifiers of the PolicyCollections to be added to the collection.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base properties to create or update a policy collection"
      },
      "AsAtPredicateContract": {
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 25,
            "minLength": 5,
            "type": "string",
            "nullable": true
          },
          "dateTimeOffset": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AsAtRangeForSpec": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/AsAtPredicateContract"
          },
          "to": {
            "$ref": "#/components/schemas/AsAtPredicateContract"
          }
        },
        "additionalProperties": false
      },
      "AsAtRelative": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/PointInTimeSpecification"
          },
          "adjustment": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "$ref": "#/components/schemas/DateUnit"
          },
          "relativeToDateTime": {
            "$ref": "#/components/schemas/RelativeToDateTime"
          }
        },
        "additionalProperties": false
      },
      "AttachedPolicyDefinitionResponse": {
        "type": "object",
        "properties": {
          "sourceRole": {
            "$ref": "#/components/schemas/RoleId"
          },
          "roleHierarchyIndex": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "policyType": {
            "$ref": "#/components/schemas/PolicyType"
          },
          "id": {
            "$ref": "#/components/schemas/PolicyId"
          },
          "grant": {
            "$ref": "#/components/schemas/Grant"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "nullable": true
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "nullable": true
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "nullable": true
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          }
        },
        "additionalProperties": false
      },
      "DateQuality": {
        "enum": [
          "Undefined",
          "IsFirstDayOfAnyMonth",
          "IsLastDayOfAnyMonth",
          "IsBusinessDayOfAnyMonth",
          "IsFirstDayOfTheCurrentMonth",
          "IsLastDayOfTheCurrentMonth",
          "IsBusinessDayOfTheCurrentMonth",
          "IsBeforeMidday",
          "IsBefore5pm",
          "IsAfter5pm"
        ],
        "type": "string"
      },
      "DateUnit": {
        "enum": [
          "Undefined",
          "Minute",
          "Hour",
          "Day",
          "BusinessDay",
          "Weeks",
          "Months",
          "Years"
        ],
        "type": "string"
      },
      "EffectiveDateHasQuality": {
        "type": "object",
        "properties": {
          "quality": {
            "$ref": "#/components/schemas/DateQuality"
          }
        },
        "additionalProperties": false
      },
      "EffectiveDateRelative": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/PointInTimeSpecification"
          },
          "adjustment": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "$ref": "#/components/schemas/DateUnit"
          },
          "relativeToDateTime": {
            "$ref": "#/components/schemas/RelativeToDateTime"
          }
        },
        "additionalProperties": false
      },
      "EffectiveRange": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntitlementMetadata": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EvaluationRequest": {
        "required": [
          "request",
          "resource"
        ],
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/RequestDetails"
          },
          "resource": {
            "$ref": "#/components/schemas/ResourceDetails"
          }
        },
        "additionalProperties": false,
        "description": "Specification for a server side evaluation of entitlement."
      },
      "EvaluationResponse": {
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EvaluationResult"
          },
          "detailedMessage": {
            "type": "string",
            "description": "In the case of the evaluation being denied a message may be returned",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The result of an evaluation request"
      },
      "EvaluationResult": {
        "enum": [
          "Denied",
          "Granted",
          "DeniedAsLicenceRequired"
        ],
        "type": "string",
        "description": "The possible results of an evaluation"
      },
      "ForSpec": {
        "type": "object",
        "properties": {
          "asAtRangeForSpec": {
            "$ref": "#/components/schemas/AsAtRangeForSpec"
          },
          "asAtRelative": {
            "$ref": "#/components/schemas/AsAtRelative"
          },
          "effectiveDateHasQuality": {
            "$ref": "#/components/schemas/EffectiveDateHasQuality"
          },
          "effectiveDateRelative": {
            "$ref": "#/components/schemas/EffectiveDateRelative"
          },
          "effectiveRange": {
            "$ref": "#/components/schemas/EffectiveRange"
          }
        },
        "additionalProperties": false
      },
      "GeneratedPolicyComponents": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Applications to which the policy applies",
            "nullable": true
          },
          "templateMetadata": {
            "$ref": "#/components/schemas/TemplateMetadata"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "description": "Selectors that this policy will be applied to",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object for policy generated from template"
      },
      "GeneratePolicyFromTemplateRequest": {
        "required": [
          "templateSelection"
        ],
        "type": "object",
        "properties": {
          "templateSelection": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateSelection"
            },
            "description": "List of template selection, identifying policy templates to use for generation"
          },
          "selectors": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "description": "List of additional selectors to be included in the policy",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generate policy from template"
      },
      "Grant": {
        "enum": [
          "Undefined",
          "Allow",
          "Deny"
        ],
        "type": "string"
      },
      "HowSpec": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfStringToString"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentifierPartSchema": {
        "required": [
          "description",
          "displayName",
          "index",
          "name",
          "required"
        ],
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdSelectorDefinition": {
        "required": [
          "actions",
          "identifier"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "minLength": 1,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "actions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IfExpression": {
        "type": "object",
        "properties": {
          "ifRequestHeaderExpression": {
            "$ref": "#/components/schemas/IfRequestHeaderExpression"
          },
          "ifIdentityClaimExpression": {
            "$ref": "#/components/schemas/IfIdentityClaimExpression"
          },
          "ifIdentityScopeExpression": {
            "$ref": "#/components/schemas/IfIdentityScopeExpression"
          },
          "ifFeatureChainExpression": {
            "$ref": "#/components/schemas/IfFeatureChainExpression"
          }
        },
        "additionalProperties": false
      },
      "IfFeatureChainExpression": {
        "required": [
          "selectors"
        ],
        "type": "object",
        "properties": {
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            }
          }
        },
        "additionalProperties": false
      },
      "IfIdentityClaimExpression": {
        "required": [
          "claimType",
          "operator"
        ],
        "type": "object",
        "properties": {
          "claimType": {
            "minLength": 1,
            "type": "string"
          },
          "claimValueType": {
            "type": "string",
            "nullable": true
          },
          "claimIssuer": {
            "type": "string",
            "nullable": true
          },
          "claimOriginalIssuer": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "$ref": "#/components/schemas/TextOperator"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IfIdentityScopeExpression": {
        "required": [
          "scopeName"
        ],
        "type": "object",
        "properties": {
          "scopeName": {
            "minLength": 1,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IfRequestHeaderExpression": {
        "required": [
          "headerName",
          "operator"
        ],
        "type": "object",
        "properties": {
          "headerName": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "$ref": "#/components/schemas/TextOperator"
          },
          "value": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeyValuePairOfStringToString": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Link": {
        "required": [
          "href",
          "method",
          "relation"
        ],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LusidProblemDetails": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LusidValidationProblemDetails": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatchAllSelectorDefinition": {
        "required": [
          "actions"
        ],
        "type": "object",
        "properties": {
          "actions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetadataExpression": {
        "required": [
          "metadataKey",
          "operator"
        ],
        "type": "object",
        "properties": {
          "metadataKey": {
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetadataSelectorDefinition": {
        "required": [
          "actions",
          "expressions"
        ],
        "type": "object",
        "properties": {
          "expressions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataExpression"
            }
          },
          "actions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NonTransitiveSupervisorRoleResource": {
        "required": [
          "roles"
        ],
        "type": "object",
        "properties": {
          "roles": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "Operator": {
        "enum": [
          "Undefined",
          "Equals",
          "NotEquals",
          "GreaterThan",
          "GreaterThanOrEqualTo",
          "LessThan",
          "LessThanOrEqualTo",
          "In"
        ],
        "type": "string"
      },
      "PointInTimeSpecification": {
        "enum": [
          "Undefined",
          "Now",
          "FirstOfMonth",
          "FirstBusinessDayOfTheMonth",
          "LastDayOfTheMonth",
          "LastBusinessDayOfMonth",
          "FirstDayOfYear",
          "LastDayOfYear"
        ],
        "type": "string"
      },
      "PolicyCollectionCreationRequest": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "The identifier for the PolicyCollection being created"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "The identifiers of the Policies in this collection",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EntitlementMetadata"
              },
              "nullable": true
            },
            "description": "Any relevant metadata associated with this resource for controlling access to this resource",
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "The identifiers of the PolicyCollections in this collection",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "A description of this policy collection",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Create a PolicyCollection, a logical group of Policies or other PolicyCollections"
      },
      "PolicyCollectionId": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PolicyCollectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PolicyCollectionId"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "The identifiers of the Policies in this collection",
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "The identifiers of the PolicyCollections in this collection",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of this policy collection",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A PolicyCollection encapsulating one or more Policies and PolicyCollections"
      },
      "PolicyCollectionUpdateRequest": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "The identifiers of the Policies in this collection",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EntitlementMetadata"
              },
              "nullable": true
            },
            "description": "Any relevant metadata associated with this resource for controlling access to this resource",
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "The identifiers of the PolicyCollections in this collection",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "A description of this policy collection",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Update an existing PolicyCollection"
      },
      "PolicyCreationRequest": {
        "required": [
          "code",
          "grant",
          "selectors",
          "when"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "Code of the policy being created"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Description of what the policy will be used for",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Applications this policy is used with",
            "nullable": true
          },
          "grant": {
            "$ref": "#/components/schemas/Grant"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "description": "Selectors that identify what resources this policy qualifies for"
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "description": "\"For Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "description": "\"If Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          },
          "templateMetadata": {
            "$ref": "#/components/schemas/TemplateMetadata"
          }
        },
        "additionalProperties": false,
        "description": "Request to create a policy"
      },
      "PolicyId": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PolicyIdRoleResource": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PolicyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PolicyId"
          },
          "description": {
            "type": "string",
            "description": "Description of what the policy is entitling",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Applications to which the policy applies",
            "nullable": true
          },
          "grant": {
            "$ref": "#/components/schemas/Grant"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "description": "Selectors that this policy will be applied to",
            "nullable": true
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "description": "\"For Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "description": "\"If Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          },
          "templateMetadata": {
            "$ref": "#/components/schemas/TemplateMetadata"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object from the policy API"
      },
      "PolicySelectorDefinition": {
        "required": [
          "actions"
        ],
        "type": "object",
        "properties": {
          "identityRestriction": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "restrictionSelectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "nullable": true
          },
          "actions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PolicyTemplateCreationRequest": {
        "required": [
          "code",
          "description",
          "displayName",
          "templatedSelectors"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "The Code of the policy template being created"
          },
          "displayName": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string",
            "description": "The display name of the policy template being created"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Description of the policy template being craeted"
          },
          "templatedSelectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyTemplatedSelector"
            },
            "description": "The selector definitions of policies included in this policy template"
          }
        },
        "additionalProperties": false,
        "description": "Request to create a policy template"
      },
      "PolicyTemplatedSelector": {
        "required": [
          "application",
          "selector",
          "tag"
        ],
        "type": "object",
        "properties": {
          "application": {
            "minLength": 1,
            "type": "string",
            "description": "The application that this selector definition applies to"
          },
          "tag": {
            "minLength": 1,
            "type": "string",
            "description": "The type of policy that this selector definition applies to"
          },
          "selector": {
            "$ref": "#/components/schemas/SelectorDefinition"
          }
        },
        "additionalProperties": false,
        "description": "Templated selector for a policy template"
      },
      "PolicyTemplateResponse": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name of the policy template being created",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "description": "The Scope of the policy template being created",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "The Code of the policy template being created",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the policy template being created",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of applications that this policy template covers",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of policy types that this policy template covers",
            "nullable": true
          },
          "templatedSelectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyTemplatedSelector"
            },
            "description": "The selector definitions of policies included in this policy template",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object for a policy template"
      },
      "PolicyTemplateUpdateRequest": {
        "required": [
          "description",
          "displayName",
          "templatedSelectors"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string",
            "description": "The display name of the policy template being created"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Description of the policy template being craeted"
          },
          "templatedSelectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyTemplatedSelector"
            },
            "description": "The selector definitions of policies included in this policy template"
          }
        },
        "additionalProperties": false,
        "description": "Update policy template request"
      },
      "PolicyType": {
        "enum": [
          "Undefined",
          "Entitlement",
          "Licence"
        ],
        "type": "string"
      },
      "PolicyUpdateRequest": {
        "required": [
          "grant",
          "selectors",
          "when"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Description of what the policy will be used for",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Applications this policy is used with",
            "nullable": true
          },
          "grant": {
            "$ref": "#/components/schemas/Grant"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "description": "Selectors that identify what resources this policy qualifies for"
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "description": "\"For Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "description": "\"If Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          },
          "templateMetadata": {
            "$ref": "#/components/schemas/TemplateMetadata"
          }
        },
        "additionalProperties": false,
        "description": "Update policy request"
      },
      "RelativeToDateTime": {
        "enum": [
          "Undefined",
          "BeforeOrOn",
          "Before",
          "OnDayOf",
          "AfterOrOn",
          "After",
          "Exactly"
        ],
        "type": "string"
      },
      "RemoveFromPolicyCollectionRequest": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "The identifiers of the Policies to be removed from the collection.",
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "The identifiers of the PolicyCollections to be removed from the collection.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base properties to create or update a policy collection"
      },
      "RequestDetails": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/RequestedActionKey"
          },
          "fromEffectiveDate": {
            "type": "string",
            "description": "The start date for the requested effective date range for the resource (if null, UtcNow)",
            "format": "date-time",
            "nullable": true
          },
          "toEffectiveDate": {
            "type": "string",
            "description": "The end date for the requested effective date range for the resource (if null, same as from date)",
            "format": "date-time",
            "nullable": true
          },
          "fromAsAt": {
            "type": "string",
            "description": "The requested AsAt date for the resource (if null, Latest). If specifying a range of AsAt dates, this is the lower bounds.",
            "format": "date-time",
            "nullable": true
          },
          "toAsAt": {
            "type": "string",
            "description": "Upper bound if specifying a request that requires a range of AsAt dates. This is used if specifying the desire to grant access for a user between an AsAt range.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The details of the requested evaluation"
      },
      "RequestedActionKey": {
        "required": [
          "activity",
          "entityCode",
          "scope"
        ],
        "type": "object",
        "properties": {
          "entityCode": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "The type of the resource on which the activity would be performed"
          },
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "The scope/provider/vendor of the activity"
          },
          "activity": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "description": "The identifier of the action to be performed on the resource"
          }
        },
        "additionalProperties": false,
        "description": "A fully qualified action identifier"
      },
      "ResourceDetails": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The identifier of the resource being evaluated"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EntitlementMetadata"
              },
              "nullable": true
            },
            "description": "Any metadata associated with the resource being requested",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details about the resource being requested that may be pertinent to the entitlement evaluation"
      },
      "ResourceListOfAccessControlledResource": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlledResource"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceListOfPolicyCollectionResponse": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionResponse"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceListOfPolicyResponse": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyResponse"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceListOfPolicyTemplateResponse": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyTemplateResponse"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceListOfUserRoleResponse": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleResponse"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleCreationRequest": {
        "required": [
          "code",
          "resource",
          "when"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "The code of the role"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "The description of the role",
            "nullable": true
          },
          "resource": {
            "$ref": "#/components/schemas/RoleResourceRequest"
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          }
        },
        "additionalProperties": false,
        "description": "Request to create a role"
      },
      "RoleId": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RoleResourceRequest": {
        "type": "object",
        "properties": {
          "nonTransitiveSupervisorRoleResource": {
            "$ref": "#/components/schemas/NonTransitiveSupervisorRoleResource"
          },
          "policyIdRoleResource": {
            "$ref": "#/components/schemas/PolicyIdRoleResource"
          }
        },
        "additionalProperties": false,
        "description": "RoleResourceRequest"
      },
      "RoleResponse": {
        "required": [
          "id",
          "permission",
          "resource",
          "roleHierarchyIndex",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/RoleId"
          },
          "roleHierarchyIndex": {
            "type": "integer",
            "description": "The hierarchical index of the role",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "The description of the role",
            "nullable": true
          },
          "resource": {
            "$ref": "#/components/schemas/RoleResourceRequest"
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "permission": {
            "minLength": 1,
            "type": "string",
            "description": "The action key of the role"
          },
          "limit": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The identifiers of the role with the maximum privileges that this role can have",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object from the role API"
      },
      "RoleUpdateRequest": {
        "required": [
          "resource",
          "when"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "The description of the role",
            "nullable": true
          },
          "resource": {
            "$ref": "#/components/schemas/RoleResourceRequest"
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          }
        },
        "additionalProperties": false,
        "description": "Role update does not allow the changing of the id"
      },
      "SelectorDefinition": {
        "type": "object",
        "properties": {
          "metadataSelectorDefinition": {
            "$ref": "#/components/schemas/MetadataSelectorDefinition"
          },
          "idSelectorDefinition": {
            "$ref": "#/components/schemas/IdSelectorDefinition"
          },
          "matchAllSelectorDefinition": {
            "$ref": "#/components/schemas/MatchAllSelectorDefinition"
          },
          "policySelectorDefinition": {
            "$ref": "#/components/schemas/PolicySelectorDefinition"
          }
        },
        "additionalProperties": false
      },
      "TemplateMetadata": {
        "type": "object",
        "properties": {
          "templateSelection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateSelection"
            },
            "description": "List of policy templates used for a generation request",
            "nullable": true
          },
          "buildAsAt": {
            "type": "string",
            "description": "Policy template build AsAt time used for a generation request",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Extra policy template metadata information, used during a generation request"
      },
      "TemplateSelection": {
        "required": [
          "code",
          "scope"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "Scope identifying policy template to use for generation"
          },
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "Code identifying policy template to use for generation"
          },
          "selectorTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of selector tags to optionally filter in the template generation \r\n(Eg: Feature, Data, etc)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A template selection, identifying a policy template to use for generation"
      },
      "TextOperator": {
        "enum": [
          "Undefined",
          "EqualsCaseSensitive",
          "EqualsCaseInsensitive",
          "NotEqualsCaseSensitive",
          "NotEqualsCaseInsensitive",
          "ContainsCaseSensitive",
          "NotPresentOrNotContainsCaseSensitive",
          "NotPresent",
          "InCaseInsensitive"
        ],
        "type": "string"
      },
      "UserRoleCreationRequest": {
        "required": [
          "resource",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minLength": 1,
            "pattern": "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$",
            "type": "string",
            "description": "The Id of the user for whom to create the role."
          },
          "resource": {
            "$ref": "#/components/schemas/PolicyIdRoleResource"
          }
        },
        "additionalProperties": false,
        "description": "Dto used to request creating a user's role"
      },
      "UserRoleResponse": {
        "required": [
          "id",
          "resource"
        ],
        "type": "object",
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/RoleResourceRequest"
          },
          "id": {
            "$ref": "#/components/schemas/RoleId"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object from the user role API"
      },
      "UserRoleUpdateRequest": {
        "required": [
          "resource"
        ],
        "type": "object",
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/PolicyIdRoleResource"
          }
        },
        "additionalProperties": false,
        "description": "Dto used to request updating a user's role"
      },
      "WhenSpec": {
        "required": [
          "activate"
        ],
        "type": "object",
        "properties": {
          "activate": {
            "type": "string",
            "format": "date-time"
          },
          "deactivate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth2 Implicit Grant",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://lusid.okta.com/oauth2/default/v1/authorize",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {}
  ],
  "tags": [
    {
      "name": "Application Metadata",
      "description": "Methods for querying application metadata"
    },
    {
      "name": "Policies",
      "description": "Endpoints for interacting with the current user's access rights"
    },
    {
      "name": "PolicyTemplates",
      "description": "Endpoints for administering Policy Templates"
    },
    {
      "name": "Roles",
      "description": "Endpoints for administering Roles"
    },
    {
      "name": "User-roles",
      "description": "Endpoints for administering user-roles"
    }
  ],
  "x-tagGroups": {
    "name": "API",
    "tags": [
      "Application Metadata",
      "Policies",
      "PolicyTemplates",
      "Roles",
      "User-roles"
    ]
  }
}
